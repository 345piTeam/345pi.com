import Head from "next/head";
import { Post } from "../../typings";
import { sanityClient, urlFor } from "../../sanity";
import { GetStaticProps } from "next";
import Image from "next/image";
import PortableText from "react-portable-text";

const serializers = {
	normal: ({ children }: any) => {
		if (children.length === 1 && children[0] === "") {
			return <br />;
		}
		return <p style={{ fontFamily: "Sans-Serif" }}>{children}</p>;
	},
};
interface Props {
	post: Post;
}

const SinglePost: React.FC<Props> = ({ post }) => {
	return (
		<div>
			<Head>
				<title>{"345pi - " + post.title}</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main className="flex flex-col items-center">
				<h1 className="text-4xl text-center">{post.title}</h1>
				<div className="relative h-48 w-[15em] lg:w-[50%] m-4">
					<Image
						alt="post main image"
						src={urlFor(post.mainImage.asset).url()}
						layout="fill"
						objectFit="cover"
					/>
				</div>
				<div className="px-8 sm:px-24 w-full lg:w-[65%] text-left text-xl">
					<PortableText content={post.body} serializers={serializers} />
				</div>
			</main>
		</div>
	);
};

export const getStaticPaths = async () => {
	const query = `*[_type == "post" && !(_id in path('drafts.**'))] {
		_id,
		slug {
      		current
    	}
	}`;

	const result = await sanityClient.fetch(query);

	const paths = result.map((post: Post) => ({
		params: { id: post.slug.current },
	}));

	return { paths, fallback: "blocking" };
};

export const getStaticProps: GetStaticProps = async ({ params }) => {
	const query = `*[_type == "post" && !(_id in path('drafts.**')) && slug.current == $id][0] {
		_id,
		slug {
      		current
    	},
		title,
		author,
		body,
		mainImage
	}`;

	const post = await sanityClient.fetch(query, { id: params?.id });

	if (!post) {
		return { notFound: true };
	}

	return {
		props: {
			post,
		},
	};
};

export default SinglePost;
